syntax = "proto3";
import "src/proto/commons.proto";

package ferrum_refinery.proto;


service ForemanService {
  rpc SendHeartBeat(HeartbeatRequest) returns (HeartBeatResponse) {}
  rpc RegisterWithForeman(RegistrationRequest) returns (RegistrationResponse) {}
  rpc CreateJob(CreateJobRequest) returns (CreateJobResponse) {}
  rpc GetReducer(GetReducerRequest) returns (GetReducerResponse) {}
  rpc FinishShuffle(FinishShuffleRequest) returns (FinishShuffleResponse) {}
}

message RegistrationRequest {
  string worker_id = 1;
  string worker_hostname = 2;
  uint32 worker_port = 3;
}

message RegistrationResponse {
  bool success = 1;
}

message HeartbeatRequest {
  string worker_id = 1;
  HealthMetrics health_metrics = 2;
  WorkerStatus status = 3;

}

enum WorkerStatus {
  Idle = 0;
  Busy = 1;
}

message FinishShuffleRequest {
  string job_id = 1;
  string task_id = 2;
}

message FinishShuffleResponse {
  bool success = 1;

}

message HeartBeatResponse {
  optional MapTaskRequest work = 1;
}

message CreateJobRequest {
  repeated string input_data = 1;
  string output_data = 2;
}

message CreateJobResponse {
  bool success = 1;
  optional string job_id = 2;
}

message GetReducerRequest {
  uint32 reducer = 1;
}

message GetReducerResponse {
  string hostname = 1;
  uint32 port = 2;
}

enum DataLocality {
  Local = 0;
  Remote = 1;
}

message MapTaskRequest {
  string job_id = 1;
  string task_id = 2;
  string block_id = 3;
  uint64 seq = 4;
  uint64 block_size = 5;
  DataLocality locality = 8;
  optional string datanode_hostname = 9;
  optional uint32 datanode_service_port = 10;
}


